#!/bin/bash
# chkconfig: 2345 90 10
# description: Shadowsocks Golang

### BEGIN INIT INFO
# Provides:          Shadowsocks Golang
# Required-Start:    $network $syslog
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Lightweight SOCKS5 proxy tool Shadowsocks
# Description:       Start or stop the Shadowsocks-go
### END INIT INFO

NAME="Shadowsocks"

Green_font_prefix="\033[32m" && Red_font_prefix="\033[31m" && Green_background_prefix="\033[42;37m" && Red_background_prefix="\033[41;37m" && Font_color_suffix="\033[0m"
Info="${Green_font_prefix}[信息]${Font_color_suffix}"
Error="${Red_font_prefix}[错误]${Font_color_suffix}"
RETVAL=0

check_running(){
	run_status=$(bash /appex/bin/lotServer.sh status | grep "LotServer" | awk  '{print $3}')
	if [[ ${run_status} = "running!" ]]; then
		return 0
	else
		return 1
	fi
}
do_start(){
	check_running
	if [[ $? -eq 0 ]]; then
		echo -e "${Info} $NAME (PID ${PID}) 正在运行..." && exit 0
	else
		/appex/bin/lotServer.sh start
		sleep 2s
		check_running
		if [[ $? -eq 0 ]]; then
			echo -e "${Info} $NAME 启动成功 !"
		else
			echo -e "${Error} $NAME 启动失败 !请查看日志文件检查问题所在。"
		fi
	fi
}
do_stop(){
	/appex/bin/lotServer.sh stop
}
do_status(){
	check_running
	if [[ $? -eq 0 ]]; then
		echo -e "锐速 正在运行..."
	else
		echo -e "锐速 未运行 !"
		RETVAL=1
	fi
}
do_restart(){
	do_stop
	do_start
}
case "$1" in
	start|stop|restart|status)
	do_$1
	;;
	*)
	echo -e "使用方法: $0 { start | stop | restart | status }"
	RETVAL=1
	;;
esac
exit $RETVAL